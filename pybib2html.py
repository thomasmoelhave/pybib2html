#!/usr/bin/python

def sort_by_year(y, x):
	return int(x[1].fields['year']) - int(y[1].fields['year'])

def replace_all(text, dic):
	for i, j in dic.iteritems():
		text = text.replace(i, j)
	return text


def printtex(t):
	t=t.replace("\\o{}","&oslash;")
	t=t.replace("\\ae{}","&aelig;")
	t=t.replace("\\aa{}","&aring;")
	t=t.replace("{","")
	t=t.replace("}","")
	print t

def opentag(t, args=""):
	print "<"+t+" " + args+" >"
def closetag(t):
	print "</"+t+">"

def html_intag(t,x):
	opentag(t)
	printtex(x)
	closetag(t)

def html_strong(x):
	html_intag("strong",x)

def html_i(x):
	html_intag("i",x)

def html_br():
	closetag("br")

def html_a(target,text):
	opentag("a","href=\""+target+"\"")
	printtex(text)
	closetag("a")

def handle_default(value):
	print "<li>"

	html_strong(value.fields['title'])

	if 'doi' in value.fields:
		html_a("http://dx.doi.org/"+value.fields['doi']," <strong>[DOI]</strong>")

	html_br()

	printtex(value.fields['author'])
		
	html_br()

	if 'booktitle' in value.fields:
		html_i(value.fields['booktitle'])
		print ","
	if 'journal' in value.fields:
		html_i(value.fields['journal'])
		print ","
	if 'howpublished' in value.fields:
		html_i(value.fields['howpublished'])
		print ","
	print value.fields['year']

	print "</li>"

def handle_inproceedings(value):
	handle_default(value)



	
def main():
	from pybtex.database.input import bibtex
	from operator import itemgetter, attrgetter
	import pprint
	import sys
	parser = bibtex.Parser()
	bib_data = parser.parse_file('mypapers.bib')
	bib_sorted = sorted(bib_data.entries.items(), cmp=sort_by_year)

	print "<ul>"

	handlers = {'inproceedings':handle_inproceedings}
	

	for key, value in bib_sorted:
		bibtex_class = value.type
		if (bibtex_class in handlers):
			handlers[bibtex_class](value)
		else:
			sys.stderr.write("No handler for: " + bibtex_class+", using default\n")
			handle_default(value)

	print "</ul>"

	print "<small>Generated by "
	html_a("https://github.com/thomasmoelhave/pybib2html","pybib2html")


main()
